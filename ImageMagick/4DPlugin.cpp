/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.c
 #	source generated by 4D Plugin Wizard
 #	Project : ImageMagick
 #	author : miyako
 #	2012/12/21
 #
 # --------------------------------------------------------------------------------*/


#include "4DPluginAPI.h"
#include "4DPlugin.h"

#include "IMImage2.h"

#include "functions_imgk.h"

void PluginMain(int32_t selector, PA_PluginParameters params)
{
	try
	{
		int32_t pProcNum = selector;
		sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
		PackagePtr pParams = (PackagePtr)params->fParameters;

		CommandDispatcher(pProcNum, pResult, pParams); 
	}
	catch(...)
	{

	}
}

void CommandDispatcher (int32_t pProcNum, sLONG_PTR *pResult, PackagePtr pParams)
{
	switch(pProcNum)
	{
		case kServerInitPlugin :			
		case kInitPlugin :
			MagickCore::MagickCoreGenesis(0, MagickCore::MagickFalse); 
			break;

		case kServerDeinitPlugin :			
		case kDeinitPlugin :			
			MagickCore::MagickCoreTerminus();
			break;
			
// --- Image Object

		case 1 :
			IM_New_Object(pResult, pParams);
			break;

		case 2 :
			IM_Clear_Object(pResult, pParams);
			break;

		case 3 :
			IM_Copy(pResult, pParams);
			break;

		case 4 :
			IM_Create(pResult, pParams);
			break;

// --- Image Usage

		case 5 :
			IM_Open_File(pResult, pParams);
			break;

		case 6 :
			IM_Save_File(pResult, pParams);
			break;

		case 7 :
			IM_Get_Image_Properties(pResult, pParams);
			break;

		case 8 :
			IM_Set_Image_Properties(pResult, pParams);
			break;

		case 9 :
			IM_Modify_Image(pResult, pParams);
			break;

		case 10 :
			IM_Open_Blob(pResult, pParams);
			break;

		case 11 :
			IM_Save_Blob(pResult, pParams);
			break;

		case 12 :
			IM_Draw(pResult, pParams);
			break;

// --- Utilities

		case 13 :
			IM_Get_Last_Error(pResult, pParams);
			break;

		case 14 :
			IM_Get_Format_List(pResult, pParams);
			break;

	}
}